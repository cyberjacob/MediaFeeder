@page
@using Humanizer
@using MediaFeeder.Models
@model MediaFeeder.Pages.IndexModel
@* @page "/folder/{FolderId:int}" *@
@* @page "/subscription/{SubscriptionId:int}" *@

<div style="display: flex; justify-content: center;">
    <rux-global-status-bar
        include-icon="true"
        app-state="Production"
        app-state-color="tag1"
        username="@User.Identity?.Name"
        app-domain="MediaFeeder"
        app-name="Dashboard"
        app-version="4.0 Alpha"
        menu-icon="video-library">
        <rux-button slot="right-side">Emergency shut off</rux-button>
    </rux-global-status-bar>
</div>

<div class="flex">
    <div class="w-20">Tree goes here</div>
    <div class="w-full">
        <div class="flex justify-between">
            <rux-input type="search" size="medium" value="@@Search" class="sm:w-10 xs:w-full"/>

            <rux-select label="Sort" size="medium" value="@@Sort" class="sm:w-10 xs:w-full">
                <rux-option value="@SortOrder.Oldest" label="Oldest" />
                <rux-option value="@SortOrder.Newest" label="Newest" />
                <rux-option value="@SortOrder.Playlist" label="Playlist" />
                <rux-option value="@SortOrder.ReversePlaylist" label="Reverse Playlist" />
                <rux-option value="@SortOrder.Popularity" label="Popularity" />
                <rux-option value="@SortOrder.TopRated" label="Top Rated" />
            </rux-select>

            <MudSelect class="sm:w-10 xs:w-full" bind-value="@@ShowWatched" Label="Show Only">
                <MudSelectItem Value="ShowOnlyWatched.Watched">Watched</MudSelectItem>
                <MudSelectItem Value="ShowOnlyWatched.NotWatched">Not Watched</MudSelectItem>
                <MudSelectItem Value="ShowOnlyWatched.All">(All)</MudSelectItem>
            </MudSelect>
            <MudSelect class="sm:w-10 xs:w-full" bind-value="@@ShowDownloaded" Label="Show Only">
                <MudSelectItem Value="ShowOnlyDownloaded.Downloaded">Downloaded</MudSelectItem>
                <MudSelectItem Value="ShowOnlyDownloaded.NotDownloaded">Not Downloaded</MudSelectItem>
                <MudSelectItem Value="ShowOnlyDownloaded.All">(All)</MudSelectItem>
            </MudSelect>
            <MudSelect class="sm:w-10 xs:w-full" bind-value="@@ResultsPerPage" Label="Results Per Page">
                <MudSelectItem Value="25">25</MudSelectItem>
                <MudSelectItem Value="50">50</MudSelectItem>
                <MudSelectItem Value="100">100</MudSelectItem>
                <MudSelectItem Value="200">200</MudSelectItem>
            </MudSelect>

            <rux-button secondary="" icon="play">Watch All</rux-button>
            <rux-button secondary="" icon="shuffle">Shuffle 1 Hour</rux-button>
            <rux-button secondary="" icon="RemoveRedEye">Mark All as Watched</rux-button>
            
            <MudText Typo="Typo.caption">@Model.TotalDuration</MudText>
        </div>
        <div class="flex flex-wrap">
            @foreach (var video in Model.Videos)
            {
                var imageStyle = video.Watched
                ? "opacity: 0.4;"
                : "";
                <rux-card class="w-10 m-auto">
                    <img Style="@imageStyle" Image="@("https://ytsm.home.foxocube.xyz/media/" + video.Thumb)" />
                    
                    <div slot="header">
                        <h6>@video.Name</h6>
                    </div>

                    <div slot="footer" class="flex">
                        <div Typo="Typo.body2">
                            @if (video.Views > 0)
                            {
                                <span>@video.Views.ToMetric() views &#x2022;&nbsp;</span>
                            }
                            @video.PublishDate.Humanize()
                            @if (video.Duration > 0)
                            {
                                <span>&nbsp;&#x2022; @video.DurationSpan.Humanize()</span>
                            }
                        </div>
                        <div Typo="Typo.body1">@video.Description.Truncate(120)</div>

                        <>Primary button</>
                        
                        <a href="@Url.ActionLink("Video", values:new {id=video.Id})">
                            <rux-button size="small">Watch Now</rux-button>
                        </a>
                        <rux-button size="small">Mark Watched</rux-button>
                        <rux-button size="small">Download</rux-button>
                    </div>
                </rux-card>

                @*
                <div class="card-wrapper d-flex align-items-stretch video" data-video-id="{{ video.id }}" style="width: 18rem;">
                    <div class="card mx-auto">
                        <a href="{% url 'video' video.id %}" target="_blank">
                            <div>
                                <img class="card-img-top {% if video.watched %}muted{% endif %}" src="{% thumbnail video.thumb 410x230 %}" alt="Thumbnail">
                                <div class="video-badges">
                                    {% if video.new and not video.watched %}
                                        <div class="video-badge video-badge-new">New</div>
                                    {% endif %}
                                    {% if video.watched %}
                                        <div class="video-badge video-badge-watched">Watched</div>
                                    {% endif %}
                                    {% if video.downloaded_path %}
                                        <div class="video-badge video-badge-downloaded">Downloaded</div>
                                    {% endif %}
                                </div>
                            </div>
                        </a>
                        <div class="card-body">
                            <div class="dropdown show">
                                <a class="card-more float-right text-muted"
                                    href="#" role="button" id="dropdownMenuLink"
                                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <span class="typcn typcn-cog"></span>
                                </a>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                    {% if video.watched %}
                                        <a class="dropdown-item ajax-link" href="#" data-post-url="{% url 'ajax_action_mark_video_unwatched' video.id %}">
                                            Mark not watched
                                        </a>
                                    {% else %}
                                        <a class="dropdown-item ajax-link" href="#" data-url="{% url 'ajax_action_mark_video_watched' video.id %}" onclick="video_markwatched(this)">
                                            Mark watched
                                        </a>
                                    {% endif %}

                                    {% if video.downloaded_path %}
                                        <a class="dropdown-item ajax-link" href="#" data-post-url="{% url 'ajax_action_delete_video_files' video.id %}">
                                            Delete downloaded
                                        </a>
                                    {% else %}
                                        <a class="dropdown-item ajax-link" href="#" data-post-url="{% url 'ajax_action_download_video_files' video.id %}" >
                                            Download
                                        </a>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                *@
            }
        </div>
    </div>
</div>
