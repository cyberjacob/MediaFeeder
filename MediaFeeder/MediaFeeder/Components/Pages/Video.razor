@page "/video/{id:int}/{next}"
@page "/video/{id:int}"
@using Humanizer
@using MediaFeeder.Data
@inject MediaFeederDataContext Context
@inject IServiceProvider ServiceProvider

<Layout>
    <PageHeader Class="site-page-header">
        <TitleTemplate>
            <a class="navbar-brand" href="/">
                <img src="/logo.png" alt="Logo image" height="30px"/>
                MediaFeeder
            </a>
            <span style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                @if (VideoObject != null)
                {
                    @VideoObject?.Name
                }
                else
                {
                    <Skeleton/>
                }
            </span>
        </TitleTemplate>

        <PageHeaderExtra>
            @if (VideoObject != null && Provider != null)
            {
                <Tooltip Title="@($"Watch on {Provider.Name}")">
                    <a href="@Provider.GetUrl(VideoObject)">
                        <Button Icon="@Provider.Icon"></Button>
                    </a>
                </Tooltip>
            }

            <Tooltip Title="@WatchButtonText">
                <Button Icon="@WatchButtonIcon" Color="@WatchButtonColour" OnClick="@MarkWatched"></Button>
            </Tooltip>

            @if (Next != null)
            {
                <Tooltip Title="Go to next video">
                    <Button Icon="@IconType.Outline.FastForward" OnClick="@GoNext"></Button>
                </Tooltip>
            }

            <Tooltip Title="@DownloadButtonText">
                <Button Icon="@DownloadButtonIcon" Color="@DownloadButtonColour" OnClick="@Download"></Button>
            </Tooltip>

            @if (Next != null)
            {
                <Tooltip Title="Remaining">
                    <Button>@UpNextCount, @UpNextDuration.Humanize()</Button>
                </Tooltip>
            }
        </PageHeaderExtra>
    </PageHeader>
    <Content>
        @if (VideoObject != null && Provider != null)
        {
            <DynamicComponent
                Type="@Provider.VideoFrameView"
                Parameters="@(new Dictionary<string, object>
                            {
                                { "Video", VideoObject },
                                { "Page", this }
                            })"/>

            <p style="padding: 24px;">
                <AntDesign.Text Type="TextElementType.Secondary">
                    @if (VideoObject.Views > 0)
                    {
                        <span>@VideoObject.Views.ToMetric() views &#x2022; </span>
                    }

                    <span>@VideoObject.PublishDate.Humanize()</span>

                    @if (VideoObject.Rating > 0)
                    {
                        <span> &#x2022; @VideoObject.Rating </span>
                    }
                </AntDesign.Text>

                <Paragraph>@VideoObject.Description</Paragraph>
            </p>
        }
        else
        {
            <Skeleton/>
        }
    </Content>
</Layout>
