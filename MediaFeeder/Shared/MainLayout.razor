@inherits LayoutComponentBase
@inject NavigationManager _navigationManager


<PageTitle>@Title - MediaFeeder</PageTitle>

<CascadingValue Value="this">
    <MudLayout>
        <MudAppBar Elevation="1">
            <MudText Typo="Typo.h5" Class="ml-3">@Title</MudText>
            <MudSpacer />
            <LoginDisplay/>
        </MudAppBar>
        <MudDrawer Open="@ShowSidebar" ClipMode="DrawerClipMode.Always" Elevation="2">
            <AuthorizeView>
                <Authorized>
                    <NavMenu/>
                </Authorized>
                <NotAuthorized>
                    <a href="Identity/Account/Login">Log in</a>
                </NotAuthorized>
            </AuthorizeView>
        </MudDrawer>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudLayout>
</CascadingValue>

@code{

    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var user = (await AuthStat).User;
        if(!user.Identity.IsAuthenticated)
        {
            _navigationManager.NavigateTo($"/Identity/Account/Login?returnUrl={Uri.EscapeDataString(_navigationManager.ToBaseRelativePath(_navigationManager.Uri))}");
        }
    }

    private string _title = "MediaFeeder";

    public string Title
    {
        get => _title;
        set {
            _title = value;
            InvokeAsync(StateHasChanged);
        }
    }

    private bool _showSidebar = true;

    public bool ShowSidebar
    {
        get => _showSidebar;
        set
        {
            _showSidebar = value;
            InvokeAsync(StateHasChanged);
        }
    }
}
